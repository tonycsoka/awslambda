# generated by datamodel-codegen:
#   filename:  awseventv1.json
#   timestamp: 2024-04-06T16:10:15+00:00

from typing import Literal
from pydantic import BaseModel


class Authorizer(BaseModel):
    claims: dict
    scopes: dict


class Validity(BaseModel):
    notBefore: str
    notAfter: str


class ClientCert(BaseModel):
    clientCertPem: str
    subjectDN: str
    issuerDN: str
    serialNumber: str
    validity: Validity


class Identity(BaseModel):
    accessKey: str | None
    accountId: str | None
    caller: str | None
    cognitoAuthenticationProvider: str | None
    cognitoAuthenticationType: str | None
    cognitoIdentityId: str | None
    cognitoIdentityPoolId: str | None
    principalOrgId: str | None
    sourceIp: str
    user: str | None
    userAgent: str
    userArn: str | None
    clientCert: ClientCert


class RequestContext(BaseModel):
    accountId: str
    apiId: str
    authorizer: Authorizer
    domainName: str
    domainPrefix: str
    extendedRequestId: str
    httpMethod: str
    identity: Identity
    path: str
    protocol: str
    requestId: str
    requestTime: str
    requestTimeEpoch: int
    resourceId: str | None
    resourcePath: str
    stage: str


class EventV1(BaseModel):
    version: Literal["1.0"]
    resource: str | None = None
    path: str
    httpMethod: str
    headers: dict
    multiValueHeaders: dict | None = None
    queryStringParameters: dict
    multiValueQueryStringParameters: dict | None = None
    requestContext: RequestContext | None = None
    pathParameters: dict | None = None
    stageVariables: dict | None = None
    body: str | None = None
    isBase64Encoded: bool = False
